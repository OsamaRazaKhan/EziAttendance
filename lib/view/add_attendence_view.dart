import 'package:attendence_management_sys/model/attendence.dart';
import 'package:attendence_management_sys/resources/color.dart';
import 'package:attendence_management_sys/resources/components/round_button.dart';
import 'package:attendence_management_sys/utils/global.dart';
import 'package:attendence_management_sys/view_model/attendence_view_model.dart';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:provider/provider.dart';

import '../resources/components/custom_dropdown.dart';

class AddAttendanceView extends StatefulWidget {
  AddAttendanceView();

  @override
  _AddAttendanceViewState createState() => _AddAttendanceViewState();
}

class _AddAttendanceViewState extends State<AddAttendanceView> {
  final _formKey = GlobalKey<FormState>();
  final DateFormat _dateFormat = DateFormat('yyyy-MM-dd');

  DateTime? _selectedDate;
  String _selectedStatus = 'Present';
  bool _leaveRequest = false;
  bool _isDateSelected = false;

  void _saveAttendance() {
    if (_formKey.currentState!.validate() && _selectedDate != null) {
      Attendance newAttendance = Attendance(
        attendanceId: 0, // This would be generated by the backend
        userId: 1, //widget.userId,
        date: _selectedDate!,
        status: _selectedStatus,
        leaveRequest: _leaveRequest,
      );
      Navigator.pop(context,
          newAttendance); // Return the new attendance to the previous screen
    }
  }

  void _pickDate(BuildContext context) async {
    DateTime? pickedDate = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(2015),
      lastDate: DateTime.now(),
    );
    if (pickedDate != null) {
      setState(() {
        _selectedDate = pickedDate;
        _isDateSelected = true;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    final attendViewModel = Provider.of<AttendViewModel>(context);
    return Scaffold(
      appBar: AppBar(
        foregroundColor: Colors.white,
        title: Padding(
          padding: const EdgeInsets.only(left: 50.0),
          child: Text('$globalstu_fullname'),
        ),
        backgroundColor: AppColors.app_bar,
      ),
      body: Padding(
        padding: const EdgeInsets.only(top: 50, right: 16, left: 16),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'Date',
                style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
              ),
              SizedBox(height: 8),
              GestureDetector(
                onTap: () => _pickDate(context),
                child: AnimatedContainer(
                  duration: Duration(milliseconds: 300),
                  padding: EdgeInsets.symmetric(vertical: 12, horizontal: 16),
                  decoration: BoxDecoration(
                    border: Border.all(color: Colors.grey),
                    borderRadius: BorderRadius.circular(8),
                    color: _isDateSelected
                        ? Colors.green.shade100
                        : Colors.transparent,
                  ),
                  child: Text(
                    _selectedDate == null
                        ? 'Select Date'
                        : _dateFormat.format(_selectedDate!),
                  ),
                ),
              ),
              SizedBox(height: 16),
              Text(
                'Status',
                style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
              ),
              SizedBox(height: 8),
              CustomDropdownButton(
                items: ['Present', 'Absent', 'Leave'],
                selectedItem: 'Present',
                onChanged: (value) {
                  _selectedStatus = value;
                },
              ),
              SizedBox(height: 16),
              SizedBox(height: 24),
              Center(
                child: AnimatedSwitcher(
                  duration: Duration(milliseconds: 300),
                  child: RoundButton(
                      title: 'Mark Attendance',
                      loading: attendViewModel.loading,
                      onPress: () {
                        String dateTime = DateFormat('yyyy-MM-dd')
                            .format(_selectedDate!)
                            .toString();
                        Map data = {
                          "userId": globaluserid,
                          "Date": dateTime,
                          "Status": _selectedStatus,
                          "LeaveRequest": _selectedStatus == "Leave" ? 1 : 0,
                        };

                        attendViewModel.PostAttend(data, context);
                      }),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
